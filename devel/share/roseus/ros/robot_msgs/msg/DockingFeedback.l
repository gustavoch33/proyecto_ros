;; Auto-generated. Do not edit!


(when (boundp 'robot_msgs::DockingFeedback)
  (if (not (find-package "ROBOT_MSGS"))
    (make-package "ROBOT_MSGS"))
  (shadow 'DockingFeedback (find-package "ROBOT_MSGS")))
(unless (find-package "ROBOT_MSGS::DOCKINGFEEDBACK")
  (make-package "ROBOT_MSGS::DOCKINGFEEDBACK"))

(in-package "ROS")
;;//! \htmlinclude DockingFeedback.msg.html


(defclass robot_msgs::DockingFeedback
  :super ros::object
  :slots (_docking_step ))

(defmethod robot_msgs::DockingFeedback
  (:init
   (&key
    ((:docking_step __docking_step) 0)
    )
   (send-super :init)
   (setq _docking_step (round __docking_step))
   self)
  (:docking_step
   (&optional __docking_step)
   (if __docking_step (setq _docking_step __docking_step)) _docking_step)
  (:serialization-length
   ()
   (+
    ;; int32 _docking_step
    4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; int32 _docking_step
       (write-long _docking_step s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; int32 _docking_step
     (setq _docking_step (sys::peek buf ptr- :integer)) (incf ptr- 4)
   ;;
   self)
  )

(setf (get robot_msgs::DockingFeedback :md5sum-) "75a11098069abcb3a0accb1cd0548a67")
(setf (get robot_msgs::DockingFeedback :datatype-) "robot_msgs/DockingFeedback")
(setf (get robot_msgs::DockingFeedback :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
#feedback
int32 docking_step

")



(provide :robot_msgs/DockingFeedback "75a11098069abcb3a0accb1cd0548a67")


